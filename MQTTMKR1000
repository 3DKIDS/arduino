// This example uses an Arduino/Genuino Zero together with
// a WiFi101 Shield or a MKR1000 to connect to shiftr.io.
//
// IMPORTANT: This example uses the new WiFi101 library.
//
// You can check on your device after a successful
// connection here: https://shiftr.io/try.
//
// by Gilberto Conti
// https://github.com/256dpi/arduino-mqtt
//modified by jongwon SEO
//3dkids4u@gmail.com
//재수정일 2020년4월27일 
//장치 MKR1000

#include <SPI.h>
#include <WiFi101.h>
#include <MQTTClient.h>

/*wifi 패스워드 설정하기*/
char *ssid = "당신의정보";
char *pass = "당신의정보";

WiFiClient net;
MQTTClient client;

unsigned long lastMillis = 0;

#define PIN_LED    6 //LED핀번호


void messageReceived2(String &topic, String &payload) {
  Serial.println("incoming: " + topic + " - " + payload);

  // Note: Do not use the client in the callback to publish, subscribe or
  // unsubscribe as it may cause deadlocks when other things arrive while
  // sending and receiving acknowledgments. Instead, change a global variable,
  // or push to a queue and handle it in the loop after calling `client.loop()`.
  if(topic == "/chat" && payload == "on" ){
      Serial.print("Led ON!");
      digitalWrite(PIN_LED, HIGH);
    }

    if(topic == "/chat" && payload == "off" ){
      Serial.print("Led OFF!");
      digitalWrite(PIN_LED, LOW);
    }
  
}


void setup() {
  Serial.begin(9600);
  WiFi.begin(ssid, pass);
  client.begin("broker.shiftr.io", net);  //연결할 브러커 주소 입력부분 기본포트TCP1883
  client.onMessage(messageReceived2);
  
  connect();
  
  pinMode(PIN_LED, OUTPUT);
}

void connect() {
  Serial.print("checking wifi...");
  while (WiFi.status() != WL_CONNECTED) {
    Serial.print(".");
    delay(1000);
  }

  Serial.print("\nconnecting...");
  while (!client.connect("당신의정보", "당신의정보", "당신의정보")) {
    Serial.print(".");
    delay(1000);
  }

  Serial.println("\nconnected!");
  /* 구독하기 */
    client.subscribe("/mqttest/tempsensor1");
    client.subscribe("/chat");
    // client.unsubscribe("/example");

  
}

void loop() {
  client.loop();

  if(!client.connected()) {
    connect();
  }

  // publish a message roughly every second.
  if(millis() - lastMillis > 1000) {
    lastMillis = millis();
    /*연결된 브러커에 정보 보내기 */
    //client.publish("/mqttest", "moduIoT");
    client.publish("/mqttest/tempsensor1", "34");
    
    
  }
}
