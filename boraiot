/*
  Web Server

 A simple web server that shows the value of the analog input pins.
 using an Arduino Wiznet Ethernet shield.

 Circuit:
 * Ethernet shield attached to pins 10, 11, 12, 13
 * Analog inputs attached to pins A0 through A5 (optional)

 created 18 Dec 2009
 by David A. Mellis
 modified 9 Apr 2012
 by Tom Igoe
 modified 20 July 2018
 by jong won seo   3dkids4u@gmail.com
 */

#include <SPI.h>
#include <Ethernet2.h>

int  led = 4;
String readString; 

//아래에 컨트롤러의 MAC 주소와 IP 주소를 입력하십시오.
//IP 주소는 로컬 네트워크에 따라 다릅니다:

byte mac[] = {
  //0xDE, 0xAD, 0xBE, 0xEF, 0xFE, 0xED
  //0xDE, 0xAD, 0xBE, 0xEF, 0xFE, 0xEA
  //0xDE, 0xAD, 0xBE, 0xEF, 0xFE, 0xEB
  //0xDE, 0xAD, 0xBE, 0xEF, 0xFE, 0xEC
  //0xDE, 0xAD, 0xBE, 0xEF, 0xFE, 0xEE
  //0xDE, 0xAD, 0xBE, 0xEF, 0xFE, 0xEF
  //0xDE, 0xAD, 0xBE, 0xEF, 0xFE, 0xE0
  0xDE, 0xAD, 0xBE, 0xEF, 0xFE, 0xE1
};
//IPAddress ip(10, 181, 240, 130);
IPAddress ip(192, 168, 0, 177);

// 이더넷 서버 라이브러리를 이용 
//사용하려는 IP 주소와 포트 초기화 하기
// (포트 80은 HTTP의 기본값): 

EthernetServer server(80);

void setup() {
  // 직렬 통신을 열고 포트가 열리기를 기다립니다:
  Serial.begin(9600);
  while (!Serial) {
    ; // 직렬 포트가 연결될 때까지 기다리십시오. 레오나르도 보두에만 필요함
      // 현재 아두이노 우노 사용중이므로 신경 쓰지 말것!!!
  }
  
  pinMode(led, OUTPUT);

  // 이더넷 네트워장치와 서버 가동 시작!!!
  Ethernet.begin(mac, ip);
  server.begin();
  Serial.print("server is at ");
  Serial.println(Ethernet.localIP());
}


void loop() {
  // 서버에게 클라이언트가 접속 시도시
  EthernetClient client = server.available();
  if (client) {
    while (client.connected()) {   
      if (client.available()) {
        char c = client.read();
     
        // HTTP 요청에  char 데이타 형태로 읽기
        if (readString.length() < 100) {
          //store characters to string
          readString += c;
          //Serial.print(c);
         }

         //만약 HTTP통한 요청이 끝났다면
         if (c == '\n') {          
           Serial.println(readString); //요청내용를 시리얼 모니터 창에 뿌려라!
     
           client.println("HTTP/1.1 200 OK"); //고객에게 web 페이지 전송하기
           client.println("Content-Type: text/html");
           client.println();     
           client.println("<HTML>");
           client.println("<HEAD>");
           client.println("<meta name='apple-mobile-web-app-capable' content='yes' />");
           client.println("<meta name='apple-mobile-web-app-status-bar-style' content='black-translucent' />");
           client.println("<link rel='stylesheet' type='text/css' href='http://randomnerdtutorials.com/ethernetcss.css' />");
           client.println("<META charset=\"UTF-8\">");
           client.println("<TITLE>보라고 IoT 기초 네트워킹 스터디</TITLE>");
           client.println("</HEAD>");
           client.println("<BODY>");
           client.println("<H1>보라고 IoT 기초 네트워킹 스터디</H1>");
           client.println("<hr />");
           client.println("<br />");  
           client.println("<H2>Arduino with Ethernet Shield Model:W5500</H2>");
           client.println("<br />");  
           client.println("<a href=\"/?led1on\"\">Turn On LED1</a>");
           client.println("<a href=\"/?led1off\"\">Turn Off LED1</a><br />");   
           client.println("<br />");     
           client.println("<br />"); 
           client.println("<a href=\"/?button2on\"\">Rotate Left</a>");
           client.println("<a href=\"/?button2off\"\">Rotate Right</a><br />"); 
           client.println("<p>Created by Rui Santos. Visit http://randomnerdtutorials.com for more projects!</p>");  
           client.println("<br />"); 
           client.println("</BODY>");
           client.println("</HTML>");
     
           delay(1);
           //클라이언트 응대 잠시 쉬기
           client.stop();
           //만약 web페이지의 클라이언트 클릭이벤트를 수신하였다면 판단하여 진행
           if (readString.indexOf("?led1on") >0){
               digitalWrite(led, HIGH);
           }
           if (readString.indexOf("?led1off") >0){
               digitalWrite(led, LOW);
           }
          
            //다음 고객의 응답을 담기위해 데이타 수신용 변수 깨끗하게 비우기
            readString="";  
           
         }
       }
    }
}
}
